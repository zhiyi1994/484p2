SELECT DISTINCT U3.USER_ID, U3.FIRST_NAME, U3.LAST_NAME
FROM (SELECT U2.USER_ID, U2.FIRST_NAME, U2.LAST_NAME, U2.YEAR_OF_BIRTH, U2.MONTH_OF_BIRTH, U2.DAY_OF_BIRTH 
		FROM USERS U2, FRIENDS F, USERS U1
		WHERE U1.USER_ID = 10 AND F.USER1_ID = U1.USER_ID AND F.USER2_ID = U2.USER_ID) U3
WHERE 10000*U3.YEAR_OF_BIRTH + 100*U3.MONTH_OF_BIRTH + U3.DAY_OF_BIRTH = (SELECT MAX(10000*YEAR_OF_BIRTH + 										100*MONTH_OF_BIRTH + DAY_OF_BIRTH)  
		FROM (SELECT U2.USER_ID, U2.FIRST_NAME, U2.LAST_NAME, U2.YEAR_OF_BIRTH, U2.MONTH_OF_BIRTH, U2.DAY_OF_BIRTH 
		FROM USERS U2, FRIENDS F, USERS U1
		WHERE U1.USER_ID = 10 AND F.USER1_ID = U1.USER_ID AND F.USER2_ID = U2.USER_ID));

	
SELECT * FROM USERS WHERE USER_ID = 206;

SELECT T1.TAG_SUBJECT_ID, T2.TAG_SUBJECT_ID
FROM TAGS T1, TAGS T2
WHERE T1.TAG_SUBJECT_ID = 82 AND T2.TAG_SUBJECT_ID = 304 AND T1.TAG_PHOTO_ID = T2.TAG_PHOTO_ID;


SELECT * FROM FRIENDS WHERE USER1_ID = 82 AND USER2_ID = 304;
SELECT U2.USER_ID FROM 

SELECT DISTINCT U1.USER_ID, U2.USER_ID
FROM USERS U1, USERS U2, USER_HOMETOWN_CITY H1, USER_HOMETOWN_CITY H2
WHERE U1.LAST_NAME = U2.LAST_NAME AND H1.USER_ID = U1.USER_ID AND H2.USER_ID = U2.USER_ID AND H1.HOMETOWN_CITY_ID = H2.HOMETOWN_CITY_ID AND U1.USER_ID < U2.USER_ID AND ABS(U1.YEAR_OF_BIRTH - U2.YEAR_OF_BIRTH) < 10 
AND EXISTS(SELECT * FROM FRIENDS F WHERE F.USER1_ID = U1.USER_ID AND F.USER2_ID = U2.USER_ID)
ORDER BY U1.USER_ID ASC, U2.USER_ID ASC;


U1.USER_ID, U1.FIRST_NAME, U1.LAST_NAME, U2.USER_ID, U2.FIRST_NAME, U2.LAST_NAME


SELECT DISTINCT M.USER_ID AS M_ID, 
		M.FIRST_NAME AS M_FNAME, 
		M.LAST_NAME AS M_LNAME, 
		F.USER_ID AS F_ID, 
		F.FIRST_NAME AS F_FNAME, 
		F.LAST_NAME AS F_LNAME, 
		COUNT(*) AS NUM
FROM USERS M, USERS F, TAGS TM, TAGS TF
WHERE M.GENDER = 'male' AND F.GENDER = 'female' AND ABS(M.YEAR_OF_BIRTH - F.YEAR_OF_BIRTH) <= 3 AND TM.TAG_SUBJECT_ID = M.USER_ID AND TF.TAG_SUBJECT_ID = F.USER_ID
AND TM.TAG_PHOTO_ID = TF.TAG_PHOTO_ID AND ROWNUM <= 10
GROUP BY M.USER_ID
HAVING COUNT (*) > 0
ORDER BY NUM ASC;







SELECT DISTINCT F.USER_ID, F.FIRST_NAME, F.LAST_NAME, F.YEAR_OF_BIRTH, M.USER_ID, M.FIRST_NAME, M.LAST_NAME, M.YEAR_OF_BIRTH, PH.PHOTO_ID, PH.ALBUM_ID, PH.PHOTO_CAPTION, PH.PHOTO_LINK, AL.ALBUM_NAME, PA.NUM
FROM (SELECT DISTINCT M.USER_ID AS M_ID,  
																		F.USER_ID AS F_ID, 
																		COUNT (*) AS NUM
																FROM USERS M, USERS F, TAGS TM, TAGS TF
																WHERE M.GENDER = 'male' AND F.GENDER = 'female' AND ABS(M.YEAR_OF_BIRTH - F.YEAR_OF_BIRTH) <= 2 AND TM.TAG_SUBJECT_ID = M.USER_ID AND TF.TAG_SUBJECT_ID = F.USER_ID
																AND TM.TAG_PHOTO_ID = TF.TAG_PHOTO_ID AND ROWNUM <= 5 AND NOT EXISTS(SELECT * FROM FRIENDS F1 WHERE (F1.USER1_ID = M.USER_ID AND F1.USER2_ID = F.USER_ID) OR (F1.USER2_ID = M.USER_ID AND F1.USER1_ID = F.USER_ID))
																GROUP BY M.USER_ID, F.USER_ID
																HAVING COUNT (*) > 0
																ORDER BY NUM DESC, F.USER_ID ASC, M.USER_ID ASC) PA, USERS M, USERS F, PHOTOS PH, ALBUMS AL, TAGS TM, TAGS TF
WHERE M.USER_ID = PA.M_ID AND F.USER_ID = PA.F_ID AND TM.TAG_SUBJECT_ID = M.USER_ID AND TF.TAG_SUBJECT_ID = F.USER_ID AND TM.TAG_PHOTO_ID = TF.TAG_PHOTO_ID AND PH.PHOTO_ID = TM.TAG_PHOTO_ID AND PH.ALBUM_ID = AL.ALBUM_ID
ORDER BY F.USER_ID ASC, M.USER_ID ASC;			



SELECT DISTINCT F.USER_ID, F.FIRST_NAME, F.LAST_NAME, M.USER_ID, M.FIRST_NAME, M.LAST_NAME, PH.PHOTO_ID, PH.ALBUM_ID, PH.PHOTO_CAPTION, PH.PHOTO_LINK, AL.ALBUM_NAME
FROM (SELECT DISTINCT M.USER_ID AS M_ID,  
																		F.USER_ID AS F_ID, 
																		COUNT (*) AS NUM
																FROM USERS M, USERS F, TAGS TM, TAGS TF
																WHERE M.GENDER = 'male' AND F.GENDER = 'female' AND ABS(M.YEAR_OF_BIRTH - F.YEAR_OF_BIRTH) <= 2 AND TM.TAG_SUBJECT_ID = M.USER_ID AND TF.TAG_SUBJECT_ID = F.USER_ID
																AND TM.TAG_PHOTO_ID = TF.TAG_PHOTO_ID AND ROWNUM <= 5 AND NOT EXISTS(SELECT * FROM FRIENDS F1 WHERE (F1.USER1_ID = M.USER_ID AND F1.USER2_ID = F.USER_ID) OR (F1.USER2_ID = M.USER_ID AND F1.USER1_ID = F.USER_ID))
																GROUP BY M.USER_ID, F.USER_ID
																HAVING COUNT (*) > 0
																ORDER BY NUM DESC, F.USER_ID ASC, M.USER_ID ASC) PA, USERS M, USERS F, PHOTOS PH, ALBUMS AL, TAGS TM, TAGS TF
WHERE M.USER_ID = PA.M_ID AND F.USER_ID = PA.F_ID AND TM.TAG_SUBJECT_ID = M.USER_ID AND TF.TAG_SUBJECT_ID = F.USER_ID AND TM.TAG_PHOTO_ID = TF.TAG_PHOTO_ID AND PH.PHOTO_ID = TM.TAG_PHOTO_ID AND PH.ALBUM_ID = AL.ALBUM_ID
ORDER BY F.USER_ID ASC, M.USER_ID ASC;	





SELECT DISTINCT F.USER_ID, F.FIRST_NAME, F.LAST_NAME, M.USER_ID, M.FIRST_NAME, M.LAST_NAME, PH.PHOTO_ID
FROM  USERS M, USERS F, PHOTOS PH, TAGS TM, TAGS TF, ALBUMS AL
WHERE M.USER_ID = 76 AND F.USER_ID = 317 AND TM.TAG_SUBJECT_ID = M.USER_ID AND TF.TAG_SUBJECT_ID = F.USER_ID AND TM.TAG_PHOTO_ID = TF.TAG_PHOTO_ID AND PH.PHOTO_ID = TM.TAG_PHOTO_ID AND PH.ALBUM_ID = AL.ALBUM_ID
ORDER BY F.USER_ID ASC, M.USER_ID ASC;	




SELECT DISTINCT U1.LAST_NAME, COUNT(*)
FROM USERS U1
GROUP BY U1.LAST_NAME
HAVING COUNT(*) = (SELECT MAX(T.NAME_NUM) FROM (SELECT  DISTINCT COUNT(*) AS NAME_NUM, U2.LAST_NAME FROM USERS U2 GROUP BY U2.LAST_NAME) T);

SELECT DISTINCT U1.LAST_NAME
FROM USERS U1
WHERE LENGTH(U1.LAST_NAME) = (SELECT MAX(LENGTH(LAST_NAME)) FROM USERS);

SELECT DISTINCT U1.LAST_NAME
FROM USERS U1
WHERE LENGTH(U1.LAST_NAME) = (SELECT MIN(LENGTH(LAST_NAME)) FROM USERS);